package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"

	"github.com/gin-gonic/gin"
)

type Weather struct {
	Curr Current `json:"current"`
}

type Current struct {
	Temp int `json:"temperature"`
}

func main() {
	router := gin.Default()
	router.GET("/temperature/:temp", getTemp)

	router.Run("localhost:8080")

}

func getTemp(c *gin.Context) {

	temp := c.Param("temp")

	// responseBody := bytes.NewBuffer()
	//Leverage Go's HTTP Post function to make request
	resp, err := http.Get("http://api.weatherstack.com/current?access_key=7ed2507c7ca5b61778f393d776db40d9&query=" + temp)
	if err != nil {
		log.Fatal("An Error Occured %v", err)
	}

	body, err := ioutil.ReadAll(resp.Body)
	if err != nil {
		log.Fatalln(err)
	}

	w1 := Weather{}
	// var data *myJSON
	err = json.Unmarshal([]byte(body), &w1)
	if err != nil {
		fmt.Printf("could not unmarshal json: %s\n", err)
		return
	}

	fmt.Println("Temp : ", w1.Curr.Temp)
	// c.IndentedJSON(http.StatusOK, "Temperature is: ", w1.Curr.Temp)

	c.JSON(http.StatusOK, gin.H{"Temperatue": w1.Curr.Temp})
}
